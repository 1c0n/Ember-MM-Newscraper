<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbTopLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>