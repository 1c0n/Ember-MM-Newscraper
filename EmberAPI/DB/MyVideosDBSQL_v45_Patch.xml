<?xml version="1.0"?>
<CommandFile xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <transaction name="MyVideosDBSQL_v45_to_v46">
    <command type="DB">
      <description>change fields TMDB and TMDBColID to INTEGER with DEFAULT NULL in table movie</description>
      <execute>
        CREATE TABLE movie01(
        idMovie,
        idSource,
        MoviePath,
        Type,
        ListTitle,
        HasSub,
        "New",
        Mark,
        Imdb,
        Lock,
        Title,
        OriginalTitle,
        Year,
        Rating,
        Votes,
        MPAA,
        Top250,
        Outline,
        Plot,
        Tagline,
        Certification,
        Runtime,
        ReleaseDate,
        Playcount,
        Trailer,
        EThumbsPath,
        NfoPath,
        TrailerPath,
        SubPath,
        FanartURL,
        OutOfTolerance,
        VideoSource,
        SortTitle,
        DateAdded,
        EFanartsPath,
        ThemePath,
        TMDB,
        TMDBColID,
        DateModified,
        MarkCustom1,
        MarkCustom2,
        MarkCustom3,
        MarkCustom4,
        HasSet,
        iLastPlayed,
        Language,
        iUserRating
        );

        INSERT INTO movie01
        SELECT
        idMovie,
        idSource,
        MoviePath,
        Type,
        ListTitle,
        HasSub,
        "New",
        Mark,
        Imdb,
        Lock,
        Title,
        OriginalTitle,
        Year,
        Rating,
        Votes,
        MPAA,
        Top250,
        Outline,
        Plot,
        Tagline,
        Certification,
        Runtime,
        ReleaseDate,
        Playcount,
        Trailer,
        EThumbsPath,
        NfoPath,
        TrailerPath,
        SubPath,
        FanartURL,
        OutOfTolerance,
        VideoSource,
        SortTitle,
        DateAdded,
        EFanartsPath,
        ThemePath,
        TMDB,
        TMDBColID,
        DateModified,
        MarkCustom1,
        MarkCustom2,
        MarkCustom3,
        MarkCustom4,
        HasSet,
        iLastPlayed,
        Language,
        iUserRating
        FROM movie;

        DROP TABLE movie;

        CREATE TABLE movie (
        idMovie         integer PRIMARY KEY AUTOINCREMENT,
        idSource        integer NOT NULL,
        MoviePath       text,
        Type            bool,
        ListTitle       text,
        HasSub          bool NOT NULL DEFAULT 0,
        "New"           bool NOT NULL DEFAULT 0,
        Mark            bool NOT NULL DEFAULT 0,
        IMDB            text,
        Lock            bool,
        Title           text,
        OriginalTitle   text,
        Year            text,
        Rating          text,
        Votes           text,
        MPAA            text,
        Top250          integer,
        Outline         text,
        Plot            text,
        Tagline         text,
        Certification   text,
        Runtime         text,
        ReleaseDate     text,
        Playcount       integer,
        Trailer         text,
        EThumbsPath     text,
        NfoPath         text,
        TrailerPath     text,
        SubPath         text,
        FanartURL       text,
        OutOfTolerance  bool,
        VideoSource     text,
        SortTitle       text,
        DateAdded       integer,
        EFanartsPath    text,
        ThemePath       text,
        TMDB           integer DEFAULT NULL,
        TMDBColID      integer DEFAULT NULL,
        DateModified    integer,
        MarkCustom1     bool NOT NULL DEFAULT 0,
        MarkCustom2     bool NOT NULL DEFAULT 0,
        MarkCustom3     bool NOT NULL DEFAULT 0,
        MarkCustom4     bool NOT NULL DEFAULT 0,
        HasSet          bool NOT NULL DEFAULT 0,
        LastPlayed      integer,
        Language        text,
        UserRating      integer NOT NULL DEFAULT 0
        );

        CREATE TRIGGER delete_movie
        AFTER DELETE
        ON movie
        BEGIN
        DELETE FROM actorlinkmovie WHERE idMovie=old.idMovie;
        DELETE FROM art WHERE media_id=old.idMovie AND media_type='movie';
        DELETE FROM countrylinkmovie WHERE idMovie=old.idMovie;
        DELETE FROM directorlinkmovie WHERE idMovie=old.idMovie;
        DELETE FROM genrelinkmovie WHERE idMovie=old.idMovie;
        DELETE FROM movielinktvshow WHERE idMovie=old.idMovie;
        DELETE FROM setlinkmovie WHERE idMovie=old.idMovie;
        DELETE FROM studiolinkmovie WHERE idMovie=old.idMovie;
        DELETE FROM taglinks WHERE idMedia=old.idMovie AND media_type='movie';
        DELETE FROM writerlinkmovie WHERE idMovie=old.idMovie;
        DELETE FROM MoviesAStreams WHERE MovieID=old.idMovie;
        DELETE FROM MoviesSubs WHERE MovieID=old.idMovie;
        DELETE FROM MoviesVStreams WHERE MovieID=old.idMovie;
        END;

        INSERT INTO movie
        (idMovie,
        idSource,
        MoviePath,
        Type,
        ListTitle,
        HasSub,
        "New",
        Mark,
        IMDB,
        Lock,
        Title,
        OriginalTitle,
        Year,
        Rating,
        Votes,
        MPAA,
        Top250,
        Outline,
        Plot,
        Tagline,
        Certification,
        Runtime,
        ReleaseDate,
        Playcount,
        Trailer,
        EThumbsPath,
        NfoPath,
        TrailerPath,
        SubPath,
        FanartURL,
        OutOfTolerance,
        VideoSource,
        SortTitle,
        DateAdded,
        EFanartsPath,
        ThemePath,
        TMDB,
        TMDBColID,
        DateModified,
        MarkCustom1,
        MarkCustom2,
        MarkCustom3,
        MarkCustom4,
        HasSet,
        LastPlayed,
        Language,
        UserRating)
        SELECT
        idMovie,
        idSource,
        MoviePath,
        Type,
        ListTitle,
        HasSub,
        "New",
        Mark,
        Imdb,
        Lock,
        Title,
        OriginalTitle,
        Year,
        Rating,
        Votes,
        MPAA,
        Top250,
        Outline,
        Plot,
        Tagline,
        Certification,
        Runtime,
        ReleaseDate,
        Playcount,
        Trailer,
        EThumbsPath,
        NfoPath,
        TrailerPath,
        SubPath,
        FanartURL,
        OutOfTolerance,
        VideoSource,
        SortTitle,
        DateAdded,
        EFanartsPath,
        ThemePath,
        TMDB,
        TMDBColID,
        DateModified,
        MarkCustom1,
        MarkCustom2,
        MarkCustom3,
        MarkCustom4,
        HasSet,
        iLastPlayed,
        Language,
        iUserRating
        FROM movie01;

        DROP TABLE movie01;
      </execute>
    </command>
    <command type="DB">
      <description>change fields TMDBColID to INTEGER with DEFAULT NULL in table sets</description>
      <execute>
        CREATE TABLE sets01(
        idSet,
        ListTitle,
        NfoPath,
        TMDBColID,
        Plot,
        SetName,
        "New",
        Mark,
        Lock,
        SortMethod,
        Language
        );

        INSERT INTO sets01
        SELECT
        idSet,
        ListTitle,
        NfoPath,
        TMDBColID,
        Plot,
        SetName,
        "New",
        Mark,
        Lock,
        SortMethod,
        Language
        FROM sets;

        DROP TABLE sets;

        CREATE TABLE sets (
        idSet       integer PRIMARY KEY AUTOINCREMENT,
        ListTitle   text NOT NULL,
        NfoPath     text,
        TMDBColID   integer DEFAULT NULL,
        Plot        text,
        SetName     text,
        "New"       bool NOT NULL DEFAULT 0,
        Mark        bool NOT NULL DEFAULT 0,
        Lock        bool NOT NULL DEFAULT 0,
        SortMethod  integer NOT NULL DEFAULT 0,
        Language    text
        );

        CREATE TRIGGER delete_set
        AFTER DELETE
        ON sets
        BEGIN
        DELETE FROM art WHERE media_id=old.idSet AND media_type='set';
        END;

        INSERT INTO sets
        (idSet,
        ListTitle,
        NfoPath,
        TMDBColID,
        Plot,
        SetName,
        "New",
        Mark,
        Lock,
        SortMethod,
        Language)
        SELECT
        idSet,
        ListTitle,
        NfoPath,
        TMDBColID,
        Plot,
        SetName,
        "New",
        Mark,
        Lock,
        SortMethod,
        Language
        FROM sets01;

        DROP TABLE sets01;
      </execute>
    </command>
    <command type="DB">
      <description>change fields TVDB and strTMDB (now TMDB) to INTEGER with DEFAULT NULL in table tvshow</description>
      <execute>
        CREATE TABLE tvshow01(
        idShow,
        idSource,
        ListTitle,
        "New",
        Mark,
        TVShowPath,
        TVDB,
        Lock,
        EpisodeGuide,
        Plot,
        Premiered,
        MPAA,
        Rating,
        NfoPath,
        Language,
        Ordering,
        Status,
        ThemePath,
        EFanartsPath,
        Runtime,
        Title,
        Votes,
        EpisodeSorting,
        SortTitle,
        strIMDB,
        strTMDB,
        strOriginalTitle,
        iUserRating
        );

        INSERT INTO tvshow01
        SELECT
        idShow,
        idSource,
        ListTitle,
        "New",
        Mark,
        TVShowPath,
        TVDB,
        Lock,
        EpisodeGuide,
        Plot,
        Premiered,
        MPAA,
        Rating,
        NfoPath,
        Language,
        Ordering,
        Status,
        ThemePath,
        EFanartsPath,
        Runtime,
        Title,
        Votes,
        EpisodeSorting,
        SortTitle,
        strIMDB,
        strTMDB,
        strOriginalTitle,
        iUserRating
        FROM tvshow;

        DROP TABLE tvshow;

        CREATE TABLE tvshow (
        idShow            integer PRIMARY KEY AUTOINCREMENT,
        idSource          integer NOT NULL,
        ListTitle         text,
        "New"             bool DEFAULT 0,
        Mark              bool NOT NULL DEFAULT 0,
        TVShowPath        text NOT NULL,
        TVDB              integer DEFAULT NULL,
        Lock              bool NOT NULL DEFAULT 0,
        EpisodeGuide      text,
        Plot              text,
        Premiered         text,
        MPAA              text,
        Rating            text,
        NfoPath           text,
        Language          text,
        Ordering          integer NOT NULL DEFAULT 0,
        Status            text,
        ThemePath         text,
        EFanartsPath      text,
        Runtime           text,
        Title             text,
        Votes             text,
        EpisodeSorting    integer NOT NULL DEFAULT 0,
        SortTitle         text,
        IMDB              text,
        TMDB              integer DEFAULT NULL,
        OriginalTitle  text,
        UserRating        integer NOT NULL DEFAULT 0
        );

        CREATE UNIQUE INDEX UniqueTVShowPath
        ON tvshow
        (TVShowPath);

        CREATE TRIGGER delete_tvshow
        AFTER DELETE
        ON tvshow
        BEGIN
        DELETE FROM actorlinktvshow WHERE idShow=old.idShow;
        DELETE FROM art WHERE media_id=old.idShow AND media_type='tvshow';
        DELETE FROM creatorlinktvshow WHERE idShow=old.idShow;
        DELETE FROM countrylinktvshow WHERE idShow=old.idShow;
        DELETE FROM directorlinktvshow WHERE idShow=old.idShow;
        DELETE FROM episode WHERE idShow=old.idShow;
        DELETE FROM genrelinktvshow WHERE idShow=old.idShow;
        DELETE FROM movielinktvshow WHERE idShow=old.idShow;
        DELETE FROM seasons WHERE idShow=old.idShow;
        DELETE FROM studiolinktvshow WHERE idShow=old.idShow;
        DELETE FROM taglinks WHERE idMedia=old.idShow AND media_type='tvshow';
        END;

        INSERT INTO tvshow
        (idShow,
        idSource,
        ListTitle,
        "New",
        Mark,
        TVShowPath,
        TVDB,
        Lock,
        EpisodeGuide,
        Plot,
        Premiered,
        MPAA,
        Rating,
        NfoPath,
        Language,
        Ordering,
        Status,
        ThemePath,
        EFanartsPath,
        Runtime,
        Title,
        Votes,
        EpisodeSorting,
        SortTitle,
        IMDB,
        TMDB,
        OriginalTitle,
        UserRating)
        SELECT
        idShow,
        idSource,
        ListTitle,
        "New",
        Mark,
        TVShowPath,
        TVDB,
        Lock,
        EpisodeGuide,
        Plot,
        Premiered,
        MPAA,
        Rating,
        NfoPath,
        Language,
        Ordering,
        Status,
        ThemePath,
        EFanartsPath,
        Runtime,
        Title,
        Votes,
        EpisodeSorting,
        SortTitle,
        strIMDB,
        strTMDB,
        strOriginalTitle,
        iUserRating
        FROM tvshow01;

        DROP TABLE tvshow01;
      </execute>
    </command>
    <command type="DB">
      <description>change fields strTMDB (now TVDB) and strTMDB (now TMDB) to INTEGER with DEFAULT NULL in table seasons</description>
      <execute>
        CREATE TABLE seasons01(
        idSeason,
        idShow,
        Season,
        SeasonText,
        Lock,
        Mark,
        "New",
        strTVDB,
        strTMDB,
        strAired,
        strPlot
        );

        INSERT INTO seasons01
        SELECT
        idSeason,
        idShow,
        Season,
        SeasonText,
        Lock,
        Mark,
        "New",
        strTVDB,
        strTMDB,
        strAired,
        strPlot
        FROM seasons;

        DROP TABLE seasons;

        CREATE TABLE seasons (
        idSeason    integer PRIMARY KEY,
        idShow      integer,
        Season      integer,
        SeasonText  text,
        Lock        bool NOT NULL DEFAULT 0,
        Mark        bool NOT NULL DEFAULT 0,
        "New"       bool NOT NULL DEFAULT 0,
        TVDB        integer DEFAULT NULL,
        TMDB        integer DEFAULT NULL,
        Aired       text,
        Plot        text
        );

        CREATE UNIQUE INDEX ix_seasons
        ON seasons
        (idShow, Season);

        CREATE TRIGGER delete_season
        AFTER DELETE
        ON seasons
        BEGIN
        DELETE FROM art WHERE media_id=old.idSeason AND media_type='season';
        DELETE FROM episode WHERE Season=old.Season AND idShow=old.idShow;
        END;

        INSERT INTO seasons
        (idSeason,
        idShow,
        Season,
        SeasonText,
        Lock,
        Mark,
        "New",
        TVDB,
        TMDB,
        Aired,
        Plot)
        SELECT
        idSeason,
        idShow,
        Season,
        SeasonText,
        Lock,
        Mark,
        "New",
        strTVDB,
        strTMDB,
        strAired,
        strPlot
        FROM seasons01;

        DROP TABLE seasons01;
      </execute>
    </command>
    <command type="DB">
      <description>change fields strTVDB (now TVDB) and strTMDB (now TMDB) to INTEGER with DEFAULT NULL in table episode</description>
      <execute>
        CREATE TABLE episode01(
        idEpisode,
        idShow,
        idFile,
        idSource,
        Episode,
        Title,
        "New",
        Mark,
        Lock,
        Season,
        Rating,
        Plot,
        Aired,
        NfoPath,
        Playcount,
        DisplaySeason,
        DisplayEpisode,
        DateAdded,
        Runtime,
        Votes,
        VideoSource,
        HasSub,
        SubEpisode,
        iLastPlayed,
        strIMDB,
        strTMDB,
        strTVDB,
        iUserRating
        );

        INSERT INTO episode01
        SELECT
        idEpisode,
        idShow,
        idFile,
        idSource,
        Episode,
        Title,
        "New",
        Mark,
        Lock,
        Season,
        Rating,
        Plot,
        Aired,
        NfoPath,
        Playcount,
        DisplaySeason,
        DisplayEpisode,
        DateAdded,
        Runtime,
        Votes,
        VideoSource,
        HasSub,
        SubEpisode,
        iLastPlayed,
        strIMDB,
        strTMDB,
        strTVDB,
        iUserRating
        FROM episode;

        DROP TABLE episode;

        CREATE TABLE episode (
        idEpisode       integer PRIMARY KEY AUTOINCREMENT,
        idShow          integer NOT NULL,
        idFile          integer NOT NULL,
        idSource        integer NOT NULL,
        Episode         integer,
        Title           text,
        "New"           bool DEFAULT 0,
        Mark            bool NOT NULL DEFAULT 0,
        Lock            bool NOT NULL DEFAULT 0,
        Season          integer,
        Rating          text,
        Plot            text,
        Aired           text,
        NfoPath         text,
        Playcount       integer,
        DisplaySeason   integer,
        DisplayEpisode  integer,
        DateAdded       integer,
        Runtime         text,
        Votes           text,
        VideoSource     text,
        HasSub          bool NOT NULL DEFAULT 0,
        SubEpisode      integer,
        LastPlayed      integer,
        IMDB            text,
        TMDB            integer DEFAULT NULL,
        TVDB            integer DEFAULT NULL,
        UserRating      integer NOT NULL DEFAULT 0
        );

        CREATE TRIGGER delete_episode
        AFTER DELETE
        ON episode
        BEGIN
        DELETE FROM actorlinkepisode WHERE idEpisode=old.idEpisode;
        DELETE FROM art WHERE media_id=old.idEpisode AND media_type='episode';
        DELETE FROM directorlinkepisode WHERE idEpisode=old.idEpisode;
        DELETE FROM files WHERE idFile=old.idFile;
        DELETE FROM gueststarlinkepisode WHERE idEpisode=old.idEpisode;
        DELETE FROM writerlinkepisode WHERE idEpisode=old.idEpisode;
        DELETE FROM TVVStreams WHERE TVEpID=old.idEpisode;
        DELETE FROM TVAStreams WHERE TVEpID=old.idEpisode;
        DELETE FROM TVSubs WHERE TVEpID=old.idEpisode;
        END;

        INSERT INTO episode
        (idEpisode,
        idShow,
        idFile,
        idSource,
        Episode,
        Title,
        "New",
        Mark,
        Lock,
        Season,
        Rating,
        Plot,
        Aired,
        NfoPath,
        Playcount,
        DisplaySeason,
        DisplayEpisode,
        DateAdded,
        Runtime,
        Votes,
        VideoSource,
        HasSub,
        SubEpisode,
        LastPlayed,
        IMDB,
        TMDB,
        TVDB,
        UserRating)
        SELECT
        idEpisode,
        idShow,
        idFile,
        idSource,
        Episode,
        Title,
        "New",
        Mark,
        Lock,
        Season,
        Rating,
        Plot,
        Aired,
        NfoPath,
        Playcount,
        DisplaySeason,
        DisplayEpisode,
        DateAdded,
        Runtime,
        Votes,
        VideoSource,
        HasSub,
        SubEpisode,
        iLastPlayed,
        strIMDB,
        strTMDB,
        strTVDB,
        iUserRating
        FROM episode01;

        DROP TABLE episode01;
      </execute>
    </command>
  </transaction>
  <noTransaction type="">
  </noTransaction>
<!-- 
  <noTransaction type="DB">
    <description>nd1</description>
    <execute>ne1</execute>
  </noTransaction>
-->
</CommandFile>